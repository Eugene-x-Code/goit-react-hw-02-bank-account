{"version":3,"sources":["Components/Dashboard/Controls/controls.module.scss","Components/Dashboard/Balance/balance.module.scss","Components/Dashboard/Controls/Controls.jsx","Utils/balanceCalculator.js","Components/Dashboard/Balance/Balance.jsx","Components/Dashboard/TransactionHistory/TransactionHistory.jsx","Utils/CheckCorrectInput.js","Components/Dashboard/Dashboard.jsx","Components/App.jsx","index.js","Components/Dashboard/TransactionHistory/transactionHistory.module.scss"],"names":["module","exports","Controls","createTransaction","className","css","controls","onSubmit","e","preventDefault","type","name","onClick","transactions","reduce","balance","transaction","amount","Balance","balanceCalculator","TransactionHistory","length","history","map","id","date","key","noHistory","checkCorrectInput","inputVal","inputName","toast","warn","position","POSITION","BOTTOM_LEFT","error","Dashboard","state","target","Number","parentNode","querySelector","value","reset","shortid","generate","Date","toLocaleString","setState","prevState","success","presistedTransactions","localStorage","getItem","presistedBalance","this","JSON","parse","setItem","stringify","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41fa6875.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__3z1Ms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__3BLga\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './controls.module.scss';\n\nconst Controls = ({ createTransaction }) => (\n  <section className={css.controls}>\n    <form onSubmit={e => e.preventDefault()}>\n      <input type=\"number\" name=\"amount\" />\n      <button type=\"button\" name=\"deposit\" onClick={createTransaction}>\n        Deposit\n      </button>\n      <button type=\"button\" name=\"withdraw\" onClick={createTransaction}>\n        Withdraw\n      </button>\n    </form>\n  </section>\n);\n\nControls.propTypes = {\n  createTransaction: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\n\nexport default (transactions, type) =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance += transaction.type === type ? transaction.amount : 0),\n    0,\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport balanceCalculator from '../../../Utils/balanceCalculator';\nimport css from './balance.module.scss';\n\nconst Balance = ({ transactions, balance }) => (\n  <section className={css.balance}>\n    <span>⬆{balanceCalculator(transactions, 'deposit')}$</span>\n    <span>⬇{balanceCalculator(transactions, 'withdraw')}$</span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.any).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './transactionHistory.module.scss';\n\nconst TransactionHistory = ({ transactions }) =>\n  transactions.length > 0 ? (\n    <table className={css.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(({ id, type, amount, date }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}$</td>\n            <td>{date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ) : (\n    <p className={css.noHistory}>No History Yet</p>\n  );\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TransactionHistory;\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputVal, inputName, balance) => {\n  if (inputVal <= 0) {\n    toast.warn('Введено некорректное значение !', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n\n    return false;\n  }\n\n  if (balance < inputVal && inputName === 'withdraw') {\n    toast.error('Не достаточно средств на счету !', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n\n    return false;\n  }\n\n  return true;\n};\n\nexport default checkCorrectInput;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TaransactionHistory from './TransactionHistory/TransactionHistory';\nimport checkCorrectInput from '../../Utils/CheckCorrectInput';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const presistedTransactions = localStorage.getItem('transactions');\n    const presistedBalance = localStorage.getItem('balance');\n\n    if (presistedTransactions) {\n      this.setState({\n        transactions: JSON.parse(presistedTransactions),\n        balance: JSON.parse(presistedBalance),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n    if (prevState.balance !== balance) {\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  createTransaction = ({ target }) => {\n    const { balance } = this.state;\n    const inputVal = Number(target.parentNode.querySelector('input').value);\n    target.parentNode.reset();\n    if (checkCorrectInput(inputVal, target.name, balance)) {\n      const transaction = {\n        id: shortid.generate(),\n        type: target.name,\n        amount: inputVal,\n        date: new Date().toLocaleString(),\n      };\n\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, transaction],\n        balance:\n          transaction.type === 'withdraw'\n            ? prevState.balance - inputVal\n            : prevState.balance + inputVal,\n      }));\n\n      if (transaction.type === 'withdraw') {\n        toast.success(`Успешно выведено ${inputVal}$!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      } else {\n        toast.success(`Депозит успешно добавлен!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      }\n    }\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <>\n        <Controls createTransaction={this.createTransaction} />\n        <Balance transactions={transactions} balance={balance} />\n        <TaransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noHistory\":\"transactionHistory_noHistory__1chWY\",\"history\":\"transactionHistory_history__1n1LX\"};"],"sourceRoot":""}